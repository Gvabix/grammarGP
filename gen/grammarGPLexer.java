// Generated from C:/Users/emili/Desktop/gene2/grammarGP/grammar/grammarGP.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class grammarGPLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMA=1, DOT=2, LPAREN=3, RPAREN=4, LBRACE=5, RBRACE=6, PLUS=7, MINUS=8, 
		TIMES=9, DIV=10, ASSIGN=11, SEMI=12, INTEGER_LITERAL=13, FLOAT_LITERAL=14, 
		IF=15, ELSE=16, WHILE=17, READ=18, WRITE=19, BREAK=20, CONTINUE=21, AND=22, 
		OR=23, INT=24, FLOAT=25, EQ=26, NE=27, LT=28, GT=29, LE=30, GE=31, NOT=32, 
		IDENTIFIER=33, WS=34, DIGIT=35, LETTER=36;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"COMMA", "DOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "PLUS", "MINUS", 
			"TIMES", "DIV", "ASSIGN", "SEMI", "INTEGER_LITERAL", "FLOAT_LITERAL", 
			"IF", "ELSE", "WHILE", "READ", "WRITE", "BREAK", "CONTINUE", "AND", "OR", 
			"INT", "FLOAT", "EQ", "NE", "LT", "GT", "LE", "GE", "NOT", "IDENTIFIER", 
			"WS", "DIGIT", "LETTER", "DEC_DIGIT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "','", "'.'", "'('", "')'", "'{'", "'}'", "'+'", "'-'", "'*'", 
			"'/'", "'='", "';'", null, null, "'if'", "'else'", "'while'", "'read'", 
			"'write'", "'break'", "'continue'", "'&&'", "'||'", "'int'", "'float'", 
			"'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'!'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "COMMA", "DOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "PLUS", 
			"MINUS", "TIMES", "DIV", "ASSIGN", "SEMI", "INTEGER_LITERAL", "FLOAT_LITERAL", 
			"IF", "ELSE", "WHILE", "READ", "WRITE", "BREAK", "CONTINUE", "AND", "OR", 
			"INT", "FLOAT", "EQ", "NE", "LT", "GT", "LE", "GE", "NOT", "IDENTIFIER", 
			"WS", "DIGIT", "LETTER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public grammarGPLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "grammarGP.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000$\u00d1\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\f\u0004\fe\b\f\u000b\f\f\ff\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001"+
		"\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001"+
		"\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001"+
		"\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001e\u0001"+
		"\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001 \u0005"+
		" \u00ba\b \n \f \u00bd\t \u0001!\u0004!\u00c0\b!\u000b!\f!\u00c1\u0001"+
		"!\u0001!\u0001\"\u0004\"\u00c7\b\"\u000b\"\f\"\u00c8\u0001#\u0004#\u00cc"+
		"\b#\u000b#\f#\u00cd\u0001$\u0001$\u0000\u0000%\u0001\u0001\u0003\u0002"+
		"\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013"+
		"\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$I\u0000\u0001\u0000\u0003\u0003"+
		"\u0000\t\n\r\r  \u0001\u000009\u0003\u0000AZ__az\u00d5\u0000\u0001\u0001"+
		"\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001"+
		"\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000"+
		"\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000"+
		"\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000"+
		"\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000"+
		"\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000"+
		"\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000"+
		"\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000"+
		"\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'"+
		"\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000"+
		"\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000"+
		"\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005"+
		"\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000"+
		"\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000"+
		"\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C"+
		"\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000"+
		"\u0000\u0000\u0001K\u0001\u0000\u0000\u0000\u0003M\u0001\u0000\u0000\u0000"+
		"\u0005O\u0001\u0000\u0000\u0000\u0007Q\u0001\u0000\u0000\u0000\tS\u0001"+
		"\u0000\u0000\u0000\u000bU\u0001\u0000\u0000\u0000\rW\u0001\u0000\u0000"+
		"\u0000\u000fY\u0001\u0000\u0000\u0000\u0011[\u0001\u0000\u0000\u0000\u0013"+
		"]\u0001\u0000\u0000\u0000\u0015_\u0001\u0000\u0000\u0000\u0017a\u0001"+
		"\u0000\u0000\u0000\u0019d\u0001\u0000\u0000\u0000\u001bh\u0001\u0000\u0000"+
		"\u0000\u001dl\u0001\u0000\u0000\u0000\u001fo\u0001\u0000\u0000\u0000!"+
		"t\u0001\u0000\u0000\u0000#z\u0001\u0000\u0000\u0000%\u007f\u0001\u0000"+
		"\u0000\u0000\'\u0085\u0001\u0000\u0000\u0000)\u008b\u0001\u0000\u0000"+
		"\u0000+\u0094\u0001\u0000\u0000\u0000-\u0097\u0001\u0000\u0000\u0000/"+
		"\u009a\u0001\u0000\u0000\u00001\u009e\u0001\u0000\u0000\u00003\u00a4\u0001"+
		"\u0000\u0000\u00005\u00a7\u0001\u0000\u0000\u00007\u00aa\u0001\u0000\u0000"+
		"\u00009\u00ac\u0001\u0000\u0000\u0000;\u00ae\u0001\u0000\u0000\u0000="+
		"\u00b1\u0001\u0000\u0000\u0000?\u00b4\u0001\u0000\u0000\u0000A\u00b6\u0001"+
		"\u0000\u0000\u0000C\u00bf\u0001\u0000\u0000\u0000E\u00c6\u0001\u0000\u0000"+
		"\u0000G\u00cb\u0001\u0000\u0000\u0000I\u00cf\u0001\u0000\u0000\u0000K"+
		"L\u0005,\u0000\u0000L\u0002\u0001\u0000\u0000\u0000MN\u0005.\u0000\u0000"+
		"N\u0004\u0001\u0000\u0000\u0000OP\u0005(\u0000\u0000P\u0006\u0001\u0000"+
		"\u0000\u0000QR\u0005)\u0000\u0000R\b\u0001\u0000\u0000\u0000ST\u0005{"+
		"\u0000\u0000T\n\u0001\u0000\u0000\u0000UV\u0005}\u0000\u0000V\f\u0001"+
		"\u0000\u0000\u0000WX\u0005+\u0000\u0000X\u000e\u0001\u0000\u0000\u0000"+
		"YZ\u0005-\u0000\u0000Z\u0010\u0001\u0000\u0000\u0000[\\\u0005*\u0000\u0000"+
		"\\\u0012\u0001\u0000\u0000\u0000]^\u0005/\u0000\u0000^\u0014\u0001\u0000"+
		"\u0000\u0000_`\u0005=\u0000\u0000`\u0016\u0001\u0000\u0000\u0000ab\u0005"+
		";\u0000\u0000b\u0018\u0001\u0000\u0000\u0000ce\u0003I$\u0000dc\u0001\u0000"+
		"\u0000\u0000ef\u0001\u0000\u0000\u0000fd\u0001\u0000\u0000\u0000fg\u0001"+
		"\u0000\u0000\u0000g\u001a\u0001\u0000\u0000\u0000hi\u0003\u0019\f\u0000"+
		"ij\u0003\u0003\u0001\u0000jk\u0003\u0019\f\u0000k\u001c\u0001\u0000\u0000"+
		"\u0000lm\u0005i\u0000\u0000mn\u0005f\u0000\u0000n\u001e\u0001\u0000\u0000"+
		"\u0000op\u0005e\u0000\u0000pq\u0005l\u0000\u0000qr\u0005s\u0000\u0000"+
		"rs\u0005e\u0000\u0000s \u0001\u0000\u0000\u0000tu\u0005w\u0000\u0000u"+
		"v\u0005h\u0000\u0000vw\u0005i\u0000\u0000wx\u0005l\u0000\u0000xy\u0005"+
		"e\u0000\u0000y\"\u0001\u0000\u0000\u0000z{\u0005r\u0000\u0000{|\u0005"+
		"e\u0000\u0000|}\u0005a\u0000\u0000}~\u0005d\u0000\u0000~$\u0001\u0000"+
		"\u0000\u0000\u007f\u0080\u0005w\u0000\u0000\u0080\u0081\u0005r\u0000\u0000"+
		"\u0081\u0082\u0005i\u0000\u0000\u0082\u0083\u0005t\u0000\u0000\u0083\u0084"+
		"\u0005e\u0000\u0000\u0084&\u0001\u0000\u0000\u0000\u0085\u0086\u0005b"+
		"\u0000\u0000\u0086\u0087\u0005r\u0000\u0000\u0087\u0088\u0005e\u0000\u0000"+
		"\u0088\u0089\u0005a\u0000\u0000\u0089\u008a\u0005k\u0000\u0000\u008a("+
		"\u0001\u0000\u0000\u0000\u008b\u008c\u0005c\u0000\u0000\u008c\u008d\u0005"+
		"o\u0000\u0000\u008d\u008e\u0005n\u0000\u0000\u008e\u008f\u0005t\u0000"+
		"\u0000\u008f\u0090\u0005i\u0000\u0000\u0090\u0091\u0005n\u0000\u0000\u0091"+
		"\u0092\u0005u\u0000\u0000\u0092\u0093\u0005e\u0000\u0000\u0093*\u0001"+
		"\u0000\u0000\u0000\u0094\u0095\u0005&\u0000\u0000\u0095\u0096\u0005&\u0000"+
		"\u0000\u0096,\u0001\u0000\u0000\u0000\u0097\u0098\u0005|\u0000\u0000\u0098"+
		"\u0099\u0005|\u0000\u0000\u0099.\u0001\u0000\u0000\u0000\u009a\u009b\u0005"+
		"i\u0000\u0000\u009b\u009c\u0005n\u0000\u0000\u009c\u009d\u0005t\u0000"+
		"\u0000\u009d0\u0001\u0000\u0000\u0000\u009e\u009f\u0005f\u0000\u0000\u009f"+
		"\u00a0\u0005l\u0000\u0000\u00a0\u00a1\u0005o\u0000\u0000\u00a1\u00a2\u0005"+
		"a\u0000\u0000\u00a2\u00a3\u0005t\u0000\u0000\u00a32\u0001\u0000\u0000"+
		"\u0000\u00a4\u00a5\u0005=\u0000\u0000\u00a5\u00a6\u0005=\u0000\u0000\u00a6"+
		"4\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005!\u0000\u0000\u00a8\u00a9\u0005"+
		"=\u0000\u0000\u00a96\u0001\u0000\u0000\u0000\u00aa\u00ab\u0005<\u0000"+
		"\u0000\u00ab8\u0001\u0000\u0000\u0000\u00ac\u00ad\u0005>\u0000\u0000\u00ad"+
		":\u0001\u0000\u0000\u0000\u00ae\u00af\u0005<\u0000\u0000\u00af\u00b0\u0005"+
		"=\u0000\u0000\u00b0<\u0001\u0000\u0000\u0000\u00b1\u00b2\u0005>\u0000"+
		"\u0000\u00b2\u00b3\u0005=\u0000\u0000\u00b3>\u0001\u0000\u0000\u0000\u00b4"+
		"\u00b5\u0005!\u0000\u0000\u00b5@\u0001\u0000\u0000\u0000\u00b6\u00bb\u0003"+
		"G#\u0000\u00b7\u00ba\u0003G#\u0000\u00b8\u00ba\u0003E\"\u0000\u00b9\u00b7"+
		"\u0001\u0000\u0000\u0000\u00b9\u00b8\u0001\u0000\u0000\u0000\u00ba\u00bd"+
		"\u0001\u0000\u0000\u0000\u00bb\u00b9\u0001\u0000\u0000\u0000\u00bb\u00bc"+
		"\u0001\u0000\u0000\u0000\u00bcB\u0001\u0000\u0000\u0000\u00bd\u00bb\u0001"+
		"\u0000\u0000\u0000\u00be\u00c0\u0007\u0000\u0000\u0000\u00bf\u00be\u0001"+
		"\u0000\u0000\u0000\u00c0\u00c1\u0001\u0000\u0000\u0000\u00c1\u00bf\u0001"+
		"\u0000\u0000\u0000\u00c1\u00c2\u0001\u0000\u0000\u0000\u00c2\u00c3\u0001"+
		"\u0000\u0000\u0000\u00c3\u00c4\u0006!\u0000\u0000\u00c4D\u0001\u0000\u0000"+
		"\u0000\u00c5\u00c7\u0007\u0001\u0000\u0000\u00c6\u00c5\u0001\u0000\u0000"+
		"\u0000\u00c7\u00c8\u0001\u0000\u0000\u0000\u00c8\u00c6\u0001\u0000\u0000"+
		"\u0000\u00c8\u00c9\u0001\u0000\u0000\u0000\u00c9F\u0001\u0000\u0000\u0000"+
		"\u00ca\u00cc\u0007\u0002\u0000\u0000\u00cb\u00ca\u0001\u0000\u0000\u0000"+
		"\u00cc\u00cd\u0001\u0000\u0000\u0000\u00cd\u00cb\u0001\u0000\u0000\u0000"+
		"\u00cd\u00ce\u0001\u0000\u0000\u0000\u00ceH\u0001\u0000\u0000\u0000\u00cf"+
		"\u00d0\u0007\u0001\u0000\u0000\u00d0J\u0001\u0000\u0000\u0000\u0007\u0000"+
		"f\u00b9\u00bb\u00c1\u00c8\u00cd\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}